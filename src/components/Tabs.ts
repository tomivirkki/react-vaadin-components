// Generated file. Do not edit.
/* eslint-disable import/prefer-default-export */
/* eslint-disable import/no-extraneous-dependencies */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable import/no-unresolved */

import React from "react";

import type * as TabElement from "@vaadin/tabs/vaadin-tab";
import type * as TabsElement from "@vaadin/tabs/vaadin-tabs";
import { createVaadinComponent, eventMapper } from "../create-component.js";

type TabClass = TabElement.Tab;

const TabEvents = {};

const TabProperties = {
  version: "",
  disabled: "",
  value: "",
  selected: "",
};

const getTabPreRenderConfig = (props: { [key: string]: any }) => ({
  hostProperties: {},
  children: [],
  shadowDomContent: `<style>\n      :host(:not([orientation])) ::slotted(a[href]) {\n        justify-content: var(--_slotted-anchor-justify-content, center) !important;\n      }\n    </style>\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n      <slot></slot>\n    <style>\n    :host {\n      box-sizing: border-box;\n      padding: 0.5rem 0.75rem;\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-m);\n      line-height: var(--lumo-line-height-xs);\n      font-weight: 500;\n      opacity: 1;\n      color: var(--lumo-secondary-text-color);\n      transition: 0.15s color, 0.2s transform;\n      flex-shrink: 0;\n      display: flex;\n      align-items: center;\n      position: relative;\n      cursor: var(--lumo-clickable-cursor);\n      transform-origin: 50% 100%;\n      outline: none;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      overflow: hidden;\n      min-width: var(--lumo-size-m);\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      user-select: none;\n    }\n\n    :host(:not([orientation='vertical'])) {\n      text-align: center;\n    }\n\n    :host([orientation='vertical']) {\n      transform-origin: 0% 50%;\n      padding: 0.25rem 1rem;\n      min-height: var(--lumo-size-m);\n      min-width: 0;\n    }\n\n    :host(:hover),\n    :host([focus-ring]) {\n      color: var(--lumo-body-text-color);\n    }\n\n    :host([selected]) {\n      color: var(--lumo-primary-text-color);\n      transition: 0.6s color;\n    }\n\n    :host([active]:not([selected])) {\n      color: var(--lumo-primary-text-color);\n      transition-duration: 0.1s;\n    }\n\n    :host::before,\n    :host::after {\n      content: '';\n      position: absolute;\n      display: var(--_lumo-tab-marker-display, block);\n      bottom: 0;\n      left: 50%;\n      width: var(--lumo-size-s);\n      height: 2px;\n      background-color: var(--lumo-contrast-60pct);\n      border-radius: var(--lumo-border-radius-s) var(--lumo-border-radius-s) 0 0;\n      transform: translateX(-50%) scale(0);\n      transform-origin: 50% 100%;\n      transition: 0.14s transform cubic-bezier(0.12, 0.32, 0.54, 1);\n      will-change: transform;\n    }\n\n    :host([selected])::before,\n    :host([selected])::after {\n      background-color: var(--lumo-primary-color);\n    }\n\n    :host([orientation='vertical'])::before,\n    :host([orientation='vertical'])::after {\n      left: 0;\n      bottom: 50%;\n      transform: translateY(50%) scale(0);\n      width: 2px;\n      height: var(--lumo-size-xs);\n      border-radius: 0 var(--lumo-border-radius-s) var(--lumo-border-radius-s) 0;\n      transform-origin: 100% 50%;\n    }\n\n    :host::after {\n      box-shadow: 0 0 0 4px var(--lumo-primary-color);\n      opacity: 0.15;\n      transition: 0.15s 0.02s transform, 0.8s 0.17s opacity;\n    }\n\n    :host([selected])::before,\n    :host([selected])::after {\n      transform: translateX(-50%) scale(1);\n      transition-timing-function: cubic-bezier(0.12, 0.32, 0.54, 1.5);\n    }\n\n    :host([orientation='vertical'][selected])::before,\n    :host([orientation='vertical'][selected])::after {\n      transform: translateY(50%) scale(1);\n    }\n\n    :host([selected]:not([active]))::after {\n      opacity: 0;\n    }\n\n    :host(:not([orientation='vertical'])) ::slotted(a[href]) {\n      justify-content: center;\n    }\n\n    :host ::slotted(a) {\n      display: flex;\n      width: 100%;\n      align-items: center;\n      height: 100%;\n      margin: -0.5rem -0.75rem;\n      padding: 0.5rem 0.75rem;\n      outline: none;\n\n      /*\n          Override the CSS inherited from \`lumo-color\` and \`lumo-typography\`.\n          Note: \`!important\` is needed because of the \`:slotted\` specificity.\n        */\n      text-decoration: none !important;\n      color: inherit !important;\n    }\n\n    :host ::slotted(vaadin-icon),\n    :host ::slotted(iron-icon) {\n      margin: 0 4px;\n      width: var(--lumo-icon-size-m);\n      height: var(--lumo-icon-size-m);\n    }\n\n    /* Vaadin icons are based on a 16x16 grid (unlike Lumo and Material icons with 24x24), so they look too big by default */\n    :host ::slotted(vaadin-icon[icon^='vaadin:']),\n    :host ::slotted(iron-icon[icon^='vaadin:']) {\n      padding: 0.25rem;\n      box-sizing: border-box !important;\n    }\n\n    :host(:not([dir='rtl'])) ::slotted(vaadin-icon:first-child),\n    :host(:not([dir='rtl'])) ::slotted(iron-icon:first-child) {\n      margin-left: 0;\n    }\n\n    :host(:not([dir='rtl'])) ::slotted(vaadin-icon:last-child),\n    :host(:not([dir='rtl'])) ::slotted(iron-icon:last-child) {\n      margin-right: 0;\n    }\n\n    :host([theme~='icon-on-top']) {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-around;\n      text-align: center;\n      padding-bottom: 0.5rem;\n      padding-top: 0.25rem;\n    }\n\n    :host([theme~='icon-on-top']) ::slotted(a) {\n      flex-direction: column;\n      align-items: center;\n      margin-top: -0.25rem;\n      padding-top: 0.25rem;\n    }\n\n    :host([theme~='icon-on-top']) ::slotted(vaadin-icon),\n    :host([theme~='icon-on-top']) ::slotted(iron-icon) {\n      margin: 0;\n    }\n\n    /* Disabled */\n\n    :host([disabled]) {\n      pointer-events: none;\n      opacity: 1;\n      color: var(--lumo-disabled-text-color);\n    }\n\n    /* Focus-ring */\n\n    :host([focus-ring]) {\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n      border-radius: var(--lumo-border-radius-m);\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl'])::before,\n    :host([dir='rtl'])::after {\n      left: auto;\n      right: 50%;\n      transform: translateX(50%) scale(0);\n    }\n\n    :host([dir='rtl'][selected]:not([orientation='vertical']))::before,\n    :host([dir='rtl'][selected]:not([orientation='vertical']))::after {\n      transform: translateX(50%) scale(1);\n    }\n\n    :host([dir='rtl']) ::slotted(vaadin-icon:first-child),\n    :host([dir='rtl']) ::slotted(iron-icon:first-child) {\n      margin-right: 0;\n    }\n\n    :host([dir='rtl']) ::slotted(vaadin-icon:last-child),\n    :host([dir='rtl']) ::slotted(iron-icon:last-child) {\n      margin-left: 0;\n    }\n\n    :host([orientation='vertical'][dir='rtl']) {\n      transform-origin: 100% 50%;\n    }\n\n    :host([dir='rtl'][orientation='vertical'])::before,\n    :host([dir='rtl'][orientation='vertical'])::after {\n      left: auto;\n      right: 0;\n      border-radius: var(--lumo-border-radius-s) 0 0 var(--lumo-border-radius-s);\n      transform-origin: 0% 50%;\n    }\n  </style>`,
});

export const Tab = createVaadinComponent<TabClass, typeof TabEvents>(
  "vaadin-tab",
  TabProperties,
  TabEvents,
  () => import("@vaadin/tabs/vaadin-tab"),
  "Tab",
  undefined,
  getTabPreRenderConfig
);

export { TabElement };

type TabsClass = TabsElement.Tabs;

type TabsEventMap = TabsElement.TabsEventMap;

const TabsEventMapper = eventMapper<TabsEventMap>();
const TabsEvents = {
  ...TabsEventMapper("onItemsChanged", "items-changed"),
  ...TabsEventMapper("onSelectedChanged", "selected-changed"),
};

const TabsProperties = {
  version: "",
  selected: "",
  orientation: "",
  items: "",
};

const getTabsPreRenderConfig = (props: { [key: string]: any }) => ({
  hostProperties: { orientation: props.orientation || "horizontal" },
  children: [],
  shadowDomContent: `<style>\n      :host([orientation="vertical"]) ::slotted(vaadin-tab) {\n        transform-origin: 0% 50%;\n        padding: 0.25rem 1rem;\n        min-height: var(--lumo-size-m);\n        min-width: 0;\n        --_slotted-anchor-justify-content: normal;\n      }\n    </style>\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host([orientation='vertical']) {\n          display: block;\n        }\n\n        :host([orientation='horizontal']) [part='tabs'] {\n          flex-grow: 1;\n          display: flex;\n          align-self: stretch;\n          overflow-x: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n\n        /* This seems more future-proof than \`overflow: -moz-scrollbars-none\` which is marked obsolete\n         and is no longer guaranteed to work:\n         https://developer.mozilla.org/en-US/docs/Web/CSS/overflow#Mozilla_Extensions */\n        @-moz-document url-prefix() {\n          :host([orientation='horizontal']) [part='tabs'] {\n            overflow: hidden;\n          }\n        }\n\n        :host([orientation='horizontal']) [part='tabs']::-webkit-scrollbar {\n          display: none;\n        }\n\n        :host([orientation='vertical']) [part='tabs'] {\n          height: 100%;\n          overflow-y: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n\n        [part='back-button'],\n        [part='forward-button'] {\n          pointer-events: none;\n          opacity: 0;\n          cursor: default;\n        }\n\n        :host([overflow~='start']) [part='back-button'],\n        :host([overflow~='end']) [part='forward-button'] {\n          pointer-events: auto;\n          opacity: 1;\n        }\n\n        [part='back-button']::after {\n          content: '◀';\n        }\n\n        [part='forward-button']::after {\n          content: '▶';\n        }\n\n        :host([orientation='vertical']) [part='back-button'],\n        :host([orientation='vertical']) [part='forward-button'] {\n          display: none;\n        }\n\n        /* RTL specific styles */\n\n        :host([dir='rtl']) [part='back-button']::after {\n          content: '▶';\n        }\n\n        :host([dir='rtl']) [part='forward-button']::after {\n          content: '◀';\n        }\n      </style>\n      <div part="back-button" aria-hidden="true"></div>\n\n      <div id="scroll" part="tabs">\n        <slot></slot>\n      </div>\n\n      <div part="forward-button" aria-hidden="true"></div>\n    <style>\n    :host {\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    :host(:not([orientation='vertical'])) {\n      box-shadow: inset 0 -1px 0 0 var(--lumo-contrast-10pct);\n      position: relative;\n      min-height: var(--lumo-size-l);\n    }\n\n    :host([orientation='horizontal']) [part='tabs'] ::slotted(vaadin-tab:not([theme~='icon-on-top'])) {\n      justify-content: center;\n    }\n\n    :host([orientation='vertical']) {\n      box-shadow: -1px 0 0 0 var(--lumo-contrast-10pct);\n    }\n\n    :host([orientation='horizontal']) [part='tabs'] {\n      margin: 0 0.75rem;\n    }\n\n    :host([orientation='vertical']) [part='tabs'] {\n      width: 100%;\n      margin: 0.5rem 0;\n    }\n\n    [part='forward-button'],\n    [part='back-button'] {\n      position: absolute;\n      z-index: 1;\n      font-family: lumo-icons;\n      color: var(--lumo-tertiary-text-color);\n      font-size: var(--lumo-icon-size-m);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 1.5em;\n      height: 100%;\n      transition: 0.2s opacity;\n      top: 0;\n    }\n\n    [part='forward-button']:hover,\n    [part='back-button']:hover {\n      color: inherit;\n    }\n\n    :host(:not([dir='rtl'])) [part='forward-button'] {\n      right: 0;\n    }\n\n    [part='forward-button']::after {\n      content: var(--lumo-icons-angle-right);\n    }\n\n    [part='back-button']::after {\n      content: var(--lumo-icons-angle-left);\n    }\n\n    /* Tabs overflow */\n\n    [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: none;\n      -webkit-mask-image: var(--_lumo-tabs-overflow-mask-image);\n      mask-image: var(--_lumo-tabs-overflow-mask-image);\n    }\n\n    /* Horizontal tabs overflow */\n\n    /* Both ends overflowing */\n    :host([overflow~='start'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(\n        90deg,\n        transparent 2em,\n        #000 4em,\n        #000 calc(100% - 4em),\n        transparent calc(100% - 2em)\n      );\n    }\n\n    /* End overflowing */\n    :host([overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(90deg, #000 calc(100% - 4em), transparent calc(100% - 2em));\n    }\n\n    /* Start overflowing */\n    :host([overflow~='start']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(90deg, transparent 2em, #000 4em);\n    }\n\n    /* Vertical tabs overflow */\n\n    /* Both ends overflowing */\n    :host([overflow~='start'][overflow~='end'][orientation='vertical']) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(transparent, #000 2em, #000 calc(100% - 2em), transparent);\n    }\n\n    /* End overflowing */\n    :host([overflow~='end'][orientation='vertical']) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(#000 calc(100% - 2em), transparent);\n    }\n\n    /* Start overflowing */\n    :host([overflow~='start'][orientation='vertical']) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(transparent, #000 2em);\n    }\n\n    :host [part='tabs'] ::slotted(:not(vaadin-tab)) {\n      margin-left: var(--lumo-space-m);\n    }\n\n    /* Centered */\n\n    :host([theme~='centered'][orientation='horizontal']) ::slotted(vaadin-tab:first-of-type) {\n      margin-inline-start: auto;\n    }\n\n    :host([theme~='centered'][orientation='horizontal']) ::slotted(vaadin-tab:last-of-type) {\n      margin-inline-end: auto;\n    }\n\n    /* Small */\n\n    :host([theme~='small']),\n    :host([theme~='small']) [part='tabs'] {\n      min-height: var(--lumo-size-m);\n    }\n\n    :host([theme~='small']) [part='tabs'] ::slotted(vaadin-tab) {\n      font-size: var(--lumo-font-size-s);\n    }\n\n    /* Minimal */\n\n    :host([theme~='minimal']) {\n      box-shadow: none;\n      --_lumo-tab-marker-display: none;\n    }\n\n    /* Hide-scroll-buttons */\n\n    :host([theme~='hide-scroll-buttons']) [part='back-button'],\n    :host([theme~='hide-scroll-buttons']) [part='forward-button'] {\n      display: none;\n    }\n\n    /* prettier-ignore */\n    :host([theme~='hide-scroll-buttons'][overflow~='start'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(\n        90deg,\n        transparent,\n        #000 2em,\n        #000 calc(100% - 2em),\n        transparent 100%\n      );\n    }\n\n    :host([theme~='hide-scroll-buttons'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(90deg, #000 calc(100% - 2em), transparent 100%);\n    }\n\n    :host([theme~='hide-scroll-buttons'][overflow~='start']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(90deg, transparent, #000 2em);\n    }\n\n    /* Equal-width tabs */\n    :host([theme~='equal-width-tabs']) {\n      flex: auto;\n    }\n\n    :host([theme~='equal-width-tabs']) [part='tabs'] ::slotted(vaadin-tab) {\n      flex: 1 0 0%;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) [part='forward-button']::after {\n      content: var(--lumo-icons-angle-left);\n    }\n\n    :host([dir='rtl']) [part='back-button']::after {\n      content: var(--lumo-icons-angle-right);\n    }\n\n    :host([orientation='vertical'][dir='rtl']) {\n      box-shadow: 1px 0 0 0 var(--lumo-contrast-10pct);\n    }\n\n    :host([dir='rtl']) [part='forward-button'] {\n      left: 0;\n    }\n\n    :host([dir='rtl']) [part='tabs'] ::slotted(:not(vaadin-tab)) {\n      margin-left: 0;\n      margin-right: var(--lumo-space-m);\n    }\n\n    /* Both ends overflowing */\n    :host([dir='rtl'][overflow~='start'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(\n        -90deg,\n        transparent 2em,\n        #000 4em,\n        #000 calc(100% - 4em),\n        transparent calc(100% - 2em)\n      );\n    }\n\n    /* End overflowing */\n    :host([dir='rtl'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(-90deg, #000 calc(100% - 4em), transparent calc(100% - 2em));\n    }\n\n    /* Start overflowing */\n    :host([dir='rtl'][overflow~='start']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(-90deg, transparent 2em, #000 4em);\n    }\n\n    :host([dir='rtl'][theme~='hide-scroll-buttons'][overflow~='start'][overflow~='end']:not([orientation='vertical']))\n      [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(\n        -90deg,\n        transparent,\n        #000 2em,\n        #000 calc(100% - 2em),\n        transparent 100%\n      );\n    }\n\n    :host([dir='rtl'][theme~='hide-scroll-buttons'][overflow~='end']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(-90deg, #000 calc(100% - 2em), transparent 100%);\n    }\n\n    :host([dir='rtl'][theme~='hide-scroll-buttons'][overflow~='start']:not([orientation='vertical'])) [part='tabs'] {\n      --_lumo-tabs-overflow-mask-image: linear-gradient(-90deg, transparent, #000 2em);\n    }\n  </style>`,
});

export const Tabs = createVaadinComponent<TabsClass, typeof TabsEvents>(
  "vaadin-tabs",
  TabsProperties,
  TabsEvents,
  () => import("@vaadin/tabs/vaadin-tabs"),
  "Tabs",
  undefined,
  getTabsPreRenderConfig
);

export { TabsElement };
