// Generated file. Do not edit.
/* eslint-disable import/prefer-default-export */
/* eslint-disable import/no-extraneous-dependencies */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable import/no-unresolved */

import React from "react";

import type * as AvatarGroupElement from "@vaadin/avatar-group/vaadin-avatar-group";
import { createVaadinComponent, eventMapper } from "../create-component.js";

type AvatarGroupClass = AvatarGroupElement.AvatarGroup;

const AvatarGroupEvents = {};

const AvatarGroupProperties = {
  items: "",
  maxItemsVisible: "",
  i18n: "",
  version: "",
};

const getAvatarGroupPreRenderConfig = (props: { [key: string]: any }) => ({
  hostProperties: {},
  children: [],
  shadowDomContent: `\n      <style>\n        :host {\n          display: block;\n          width: 100%; /* prevent collapsing inside non-stretching column flex */\n          --vaadin-avatar-group-overlap: 8px;\n          --vaadin-avatar-group-overlap-border: 2px;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='container'] {\n          display: flex;\n          position: relative;\n          width: 100%;\n          flex-wrap: nowrap;\n        }\n\n        [part='avatar']:not(:first-child) {\n          -webkit-mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\n          mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\n          -webkit-mask-size: calc(\n            300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\n          );\n          mask-size: calc(\n            300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\n          );\n        }\n\n        [part='avatar']:not([dir='rtl']):not(:first-child) {\n          margin-left: calc(var(--vaadin-avatar-group-overlap) * -1 - var(--vaadin-avatar-outline-width));\n          -webkit-mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\n          mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\n        }\n\n        [part='avatar'][dir='rtl']:not(:first-child) {\n          margin-right: calc(var(--vaadin-avatar-group-overlap) * -1);\n          -webkit-mask-position: calc(\n            50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\n          );\n          mask-position: calc(\n            50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\n          );\n        }\n      </style>\n      <div id="container" part="container">\n        <dom-repeat id="items" style="display: none;"><template is="dom-repeat"></template></dom-repeat>\n        <vaadin-avatar id="overflow" part="avatar" aria-haspopup="listbox" hidden="" abbr="+NaN" title="" role="button" tabindex="0" aria-expanded="false"><template shadowroot="open">\n      <style>\n        :host {\n          display: inline-block;\n          flex: none;\n          border-radius: 50%;\n          overflow: hidden;\n          height: var(--vaadin-avatar-size, 64px);\n          width: var(--vaadin-avatar-size, 64px);\n          border: var(--vaadin-avatar-outline-width) solid transparent;\n          margin: calc(var(--vaadin-avatar-outline-width) * -1);\n          background-clip: content-box;\n          --vaadin-avatar-outline-width: 2px;\n        }\n\n        img {\n          height: 100%;\n          width: 100%;\n          object-fit: cover;\n        }\n\n        [part='icon'] {\n          font-size: 5.6em;\n        }\n\n        [part='abbr'] {\n          font-size: 2.2em;\n        }\n\n        [part='icon'] > text {\n          font-family: 'vaadin-avatar-icons';\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        svg[hidden] {\n          display: none !important;\n        }\n\n        :host([has-color-index]) {\n          position: relative;\n          background-color: var(--vaadin-avatar-user-color);\n        }\n\n        :host([has-color-index])::before {\n          position: absolute;\n          content: '';\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          border-radius: inherit;\n          box-shadow: inset 0 0 0 2px var(--vaadin-avatar-user-color);\n        }\n      </style>\n      <img aria-hidden="true" hidden="">\n      <svg part="icon" id="avatar-icon" viewBox="-50 -50 100 100" preserveAspectRatio="xMidYMid meet" aria-hidden="true" hidden="">\n        <text dy=".35em" text-anchor="middle">Ó®Å</text>\n      </svg>\n      <svg part="abbr" id="avatar-abbr" viewBox="-50 -50 100 100" preserveAspectRatio="xMidYMid meet" aria-hidden="true">\n        <text dy=".35em" text-anchor="middle">+NaN</text>\n      </svg>\n    <style>\n    :host {\n      color: var(--lumo-secondary-text-color);\n      background-color: var(--lumo-contrast-10pct);\n      border-radius: 50%;\n      outline: none;\n      cursor: default;\n      user-select: none;\n      -webkit-tap-highlight-color: transparent;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    :host([has-color-index]) {\n      color: var(--lumo-base-color);\n    }\n\n    :host([focus-ring]) {\n      border-color: var(--lumo-primary-color-50pct);\n    }\n\n    [part='icon'],\n    [part='abbr'] {\n      fill: currentColor;\n    }\n\n    [part='abbr'] {\n      font-family: var(--lumo-font-family);\n      font-size: 2.4375em;\n      font-weight: 500;\n    }\n\n    :host([theme~='xlarge']) [part='abbr'] {\n      font-size: 2.5em;\n    }\n\n    :host([theme~='large']) [part='abbr'] {\n      font-size: 2.375em;\n    }\n\n    :host([theme~='small']) [part='abbr'] {\n      font-size: 2.75em;\n    }\n\n    :host([theme~='xsmall']) [part='abbr'] {\n      font-size: 3em;\n    }\n\n    :host([theme~='xlarge']) {\n      --vaadin-avatar-size: var(--lumo-size-xl);\n    }\n\n    :host([theme~='large']) {\n      --vaadin-avatar-size: var(--lumo-size-l);\n    }\n\n    :host([theme~='small']) {\n      --vaadin-avatar-size: var(--lumo-size-s);\n    }\n\n    :host([theme~='xsmall']) {\n      --vaadin-avatar-size: var(--lumo-size-xs);\n    }\n  </style></template></vaadin-avatar>\n      </div>\n      <vaadin-avatar-group-overlay id="overlay" no-vertical-overlap="">\n        <template></template>\n      <template shadowroot="open">\n      <style>\n        :host {\n          z-index: 200;\n          position: fixed;\n\n          /* Despite of what the names say, <vaadin-overlay> is just a container\n          for position/sizing/alignment. The actual overlay is the overlay part. */\n\n          /* Default position constraints: the entire viewport. Note: themes can\n          override this to introduce gaps between the overlay and the viewport. */\n          top: 0;\n          right: 0;\n          bottom: var(--vaadin-overlay-viewport-bottom);\n          left: 0;\n\n          /* Use flexbox alignment for the overlay part. */\n          display: flex;\n          flex-direction: column; /* makes dropdowns sizing easier */\n          /* Align to center by default. */\n          align-items: center;\n          justify-content: center;\n\n          /* Allow centering when max-width/max-height applies. */\n          margin: auto;\n\n          /* The host is not clickable, only the overlay part is. */\n          pointer-events: none;\n\n          /* Remove tap highlight on touch devices. */\n          -webkit-tap-highlight-color: transparent;\n\n          /* CSS API for host */\n          --vaadin-overlay-viewport-bottom: 0;\n        }\n\n        :host([hidden]),\n        :host(:not([opened]):not([closing])) {\n          display: none !important;\n        }\n\n        [part='overlay'] {\n          -webkit-overflow-scrolling: touch;\n          overflow: auto;\n          pointer-events: auto;\n\n          /* Prevent overflowing the host in MSIE 11 */\n          max-width: 100%;\n          box-sizing: border-box;\n\n          -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\n        }\n\n        [part='backdrop'] {\n          z-index: -1;\n          content: '';\n          background: rgba(0, 0, 0, 0.5);\n          position: fixed;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          pointer-events: auto;\n        }\n      </style>\n\n      <div id="backdrop" part="backdrop" hidden=""></div>\n      <div part="overlay" id="overlay" tabindex="0">\n        <div part="content" id="content">\n          <slot></slot>\n        <template shadowroot="open"><style>\n        :host-nomatch {\n          display: block;\n          width: 100%; /* prevent collapsing inside non-stretching column flex */\n          --vaadin-avatar-group-overlap: 8px;\n          --vaadin-avatar-group-overlap-border: 2px;\n        }\n\n        :host-nomatch([hidden]) {\n          display: none !important;\n        }\n\n        [part='container'] {\n          display: flex;\n          position: relative;\n          width: 100%;\n          flex-wrap: nowrap;\n        }\n\n        [part='avatar']:not(:first-child) {\n          -webkit-mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\n          mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\n          -webkit-mask-size: calc(\n            300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\n          );\n          mask-size: calc(\n            300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\n          );\n        }\n\n        [part='avatar']:not([dir='rtl']):not(:first-child) {\n          margin-left: calc(var(--vaadin-avatar-group-overlap) * -1 - var(--vaadin-avatar-outline-width));\n          -webkit-mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\n          mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\n        }\n\n        [part='avatar'][dir='rtl']:not(:first-child) {\n          margin-right: calc(var(--vaadin-avatar-group-overlap) * -1);\n          -webkit-mask-position: calc(\n            50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\n          );\n          mask-position: calc(\n            50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\n          );\n        }\n      \n    :host-nomatch {\n      --vaadin-avatar-size: var(--lumo-size-m);\n    }\n\n    :host-nomatch([theme~='xlarge']) {\n      --vaadin-avatar-group-overlap: 12px;\n      --vaadin-avatar-group-overlap-border: 3px;\n      --vaadin-avatar-size: var(--lumo-size-xl);\n    }\n\n    :host-nomatch([theme~='large']) {\n      --vaadin-avatar-group-overlap: 10px;\n      --vaadin-avatar-group-overlap-border: 3px;\n      --vaadin-avatar-size: var(--lumo-size-l);\n    }\n\n    :host-nomatch([theme~='small']) {\n      --vaadin-avatar-group-overlap: 6px;\n      --vaadin-avatar-group-overlap-border: 2px;\n      --vaadin-avatar-size: var(--lumo-size-s);\n    }\n\n    :host-nomatch([theme~='xsmall']) {\n      --vaadin-avatar-group-overlap: 4px;\n      --vaadin-avatar-group-overlap-border: 2px;\n      --vaadin-avatar-size: var(--lumo-size-xs);\n    }\n  </style>\n          <vaadin-avatar-group-list-box role="list" aria-orientation="vertical">\n            <dom-repeat style="display: none;"><template is="dom-repeat"></template></dom-repeat>\n          <template shadowroot="open">\n      <style>\n        :host {\n          display: flex;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='items'] {\n          height: 100%;\n          width: 100%;\n          overflow-y: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n      </style>\n      <div part="items">\n        <slot></slot>\n      </div>\n    <style>\n    :host {\n      -webkit-tap-highlight-color: transparent;\n      --_lumo-item-selected-icon-display: var(--_lumo-list-box-item-selected-icon-display, block);\n    }\n\n    /* Dividers */\n    [part='items'] ::slotted(hr) {\n      height: 1px;\n      border: 0;\n      padding: 0;\n      margin: var(--lumo-space-s) var(--lumo-border-radius-m);\n      background-color: var(--lumo-contrast-10pct);\n    }\n  \n\n    [part='items'] ::slotted(vaadin-item[theme='avatar-group-item']) {\n      padding: var(--lumo-space-xs);\n      padding-right: var(--lumo-space-m);\n    }\n\n    :host([dir='rtl']) [part='items'] ::slotted(vaadin-item[theme='avatar-group-item']) {\n      padding: var(--lumo-space-xs);\n      padding-left: var(--lumo-space-m);\n    }\n  </style></template></vaadin-avatar-group-list-box>\n        </template></div>\n      </div>\n    <style>\n  :host {\n    top: var(--lumo-space-m);\n    right: var(--lumo-space-m);\n    bottom: var(--lumo-space-m);\n    left: var(--lumo-space-m);\n    /* Workaround for Edge issue (only on Surface), where an overflowing vaadin-list-box inside vaadin-select-overlay makes the overlay transparent */\n    /* stylelint-disable-next-line */\n    outline: 0px solid transparent;\n  }\n\n  [part='overlay'] {\n    background-color: var(--lumo-base-color);\n    background-image: linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n    border-radius: var(--lumo-border-radius-m);\n    box-shadow: 0 0 0 1px var(--lumo-shade-5pct), var(--lumo-box-shadow-m);\n    color: var(--lumo-body-text-color);\n    font-family: var(--lumo-font-family);\n    font-size: var(--lumo-font-size-m);\n    font-weight: 400;\n    line-height: var(--lumo-line-height-m);\n    letter-spacing: 0;\n    text-transform: none;\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  [part='content'] {\n    padding: var(--lumo-space-xs);\n  }\n\n  [part='backdrop'] {\n    background-color: var(--lumo-shade-20pct);\n    animation: 0.2s lumo-overlay-backdrop-enter both;\n    will-change: opacity;\n  }\n\n  @keyframes lumo-overlay-backdrop-enter {\n    0% {\n      opacity: 0;\n    }\n  }\n\n  :host([closing]) [part='backdrop'] {\n    animation: 0.2s lumo-overlay-backdrop-exit both;\n  }\n\n  @keyframes lumo-overlay-backdrop-exit {\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @keyframes lumo-overlay-dummy-animation {\n    0% {\n      opacity: 1;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n\n\n  :host([opening]),\n  :host([closing]) {\n    animation: 0.14s lumo-overlay-dummy-animation;\n  }\n\n  [part='overlay'] {\n    will-change: opacity, transform;\n  }\n\n  :host([opening]) [part='overlay'] {\n    animation: 0.1s lumo-menu-overlay-enter ease-out both;\n  }\n\n  @keyframes lumo-menu-overlay-enter {\n    0% {\n      opacity: 0;\n      transform: translateY(-4px);\n    }\n  }\n\n  :host([closing]) [part='overlay'] {\n    animation: 0.1s lumo-menu-overlay-exit both;\n  }\n\n  @keyframes lumo-menu-overlay-exit {\n    100% {\n      opacity: 0;\n    }\n  }\n\n\n  :host {\n    --_lumo-list-box-item-selected-icon-display: none;\n    --_lumo-list-box-item-padding-left: calc(var(--lumo-space-m) + var(--lumo-border-radius-m) / 4);\n  }\n\n  [part='overlay'] {\n    outline: none;\n  }\n</style></template></vaadin-avatar-group-overlay>\n    <style>\n    :host {\n      --vaadin-avatar-size: var(--lumo-size-m);\n    }\n\n    :host([theme~='xlarge']) {\n      --vaadin-avatar-group-overlap: 12px;\n      --vaadin-avatar-group-overlap-border: 3px;\n      --vaadin-avatar-size: var(--lumo-size-xl);\n    }\n\n    :host([theme~='large']) {\n      --vaadin-avatar-group-overlap: 10px;\n      --vaadin-avatar-group-overlap-border: 3px;\n      --vaadin-avatar-size: var(--lumo-size-l);\n    }\n\n    :host([theme~='small']) {\n      --vaadin-avatar-group-overlap: 6px;\n      --vaadin-avatar-group-overlap-border: 2px;\n      --vaadin-avatar-size: var(--lumo-size-s);\n    }\n\n    :host([theme~='xsmall']) {\n      --vaadin-avatar-group-overlap: 4px;\n      --vaadin-avatar-group-overlap-border: 2px;\n      --vaadin-avatar-size: var(--lumo-size-xs);\n    }\n  </style>`,
});

export const AvatarGroup = createVaadinComponent<
  AvatarGroupClass,
  typeof AvatarGroupEvents
>(
  "vaadin-avatar-group",
  AvatarGroupProperties,
  AvatarGroupEvents,
  () => import("@vaadin/avatar-group/vaadin-avatar-group"),
  "AvatarGroup",
  undefined,
  getAvatarGroupPreRenderConfig
);

export { AvatarGroupElement };
